{"version":3,"sources":["components/Registration/Registration.module.sass","components/MyMapInitializer/MyMapInitializer.module.sass","components/MyMapInitializer/RulesModal/RulesModal.module.sass","components/Game/Game.module.sass","components/Button/Button.module.sass","components/Modal/Modal.module.sass","components/End/End.module.sass","components/Input/Input.module.sass","components/Spinner/Spinner.module.sass","variables.ts","context/myMapInitializer.context.tsx","components/CheckeredArea/CheckeredArea.tsx","components/Map/HorizontalAxis.tsx","components/Map/VerticalAxis.tsx","components/Map/DestroyedCell.tsx","components/Map/UndestroyedCell.tsx","components/Map/Ships.tsx","components/MyMapInitializer/MapShips.tsx","components/MyMapInitializer/PositionedShip.tsx","components/MyMapInitializer/ConjecturalShip.tsx","components/MyMapInitializer/PositionedShips.tsx","utils/cssVariables.ts","components/MyMapInitializer/MapPainter.tsx","utils/clsx.tsx","components/Spinner/Spinner.tsx","components/Button/Button.tsx","components/Modal/Modal.tsx","components/MyMapInitializer/RulesModal/RulesModal.tsx","context/state.context.tsx","utils/FirebaseService.ts","hooks/useBattle.tsx","utils/notifications.ts","components/MyMapInitializer/MyMapInitializer.tsx","components/Map/MissedHits.tsx","components/Map/HitCell.tsx","components/Map/Map.tsx","components/MyMap/MyMap.tsx","components/RivalMap/RivalMap.tsx","components/Game/GamePainter.tsx","components/Game/OrderText.tsx","components/Game/Game.tsx","components/Input/Input.tsx","components/Registration/CreateGameForm.tsx","utils/copyToClipboard.ts","components/Registration/LoginForm.tsx","components/Registration/Registration.tsx","components/End/End.tsx","App.tsx","index.tsx"],"names":["module","exports","defaultCellSideSize","isMobile","window","innerWidth","horizontalCoords","verticalCoords","_positionedShips","coords","x","y","id","uuidv4","MyMapInitializerContext","React","createContext","mapShips","setMapShips","positionedShips","setPositionedShips","conjecturalShip","setConjecturalShip","rulesModalOpened","setRulesModelOpened","initializerCellSideSize","setInitializerCellSideSize","resetInitializer","MyMapInitializerContextProvider","children","useState","Provider","value","CheckeredArea","size","position","cellSideSize","width","height","Array","from","length","map","item","index","points","stroke","strokeWidth","opacity","HorizontalAxis","coord","text","align","verticalAlign","fontSize","VerticalAxis","DestroyedCell","fill","findIndex","c","UndestroyedCell","Ships","mapState","ships","hits","onShipClick","ship","destroyed","onClick","onTap","hit","find","Fragment","radius","MapShips","useContext","prev","filter","sh","positionedShip","PositionedShip","cellSlideSize","props","undefined","ConjecturalShip","wrongPosition","PositionedShips","positionedShipsLayerRef","useRef","rotatePositionedShip","isHorizontal","sortedShip","sortShipCells","ref","draggable","onDragMove","evt","firstCell","reduce","first","xPosition","Math","round","yPosition","newShip","horizontalIndex","verticalIndex","JSON","stringify","mapShipsCoords","translateToPositionedCoords","shipCoord","newShipCoord","includes","onPositionedShipDragMove","target","onDragEnd","current","translateToShipCoords","onPositionedDragEnd","sort","a","b","getCssVariable","str","getComputedStyle","document","querySelector","getPropertyValue","initializerMapSize","MapPainter","useMemo","Consumer","clsx","classes","className","Object","keys","key","join","trim","Spinner","style","styles","ldsDualRing","Button","disabled","loading","loadingLabel","button","buttonDisabled","buttonLoadingWrapper","buttonLoadingLabel","Modal","opened","onClose","container","overlay","content","contentCross","RulesModal","modal","header","rulesList","rulesListItem","backlightGreen","backlightRed","StateContext","game","setGame","step","setStep","myMap","setMyMapShips","setMyMapHits","rivalMap","setRivalMapShips","setRivalMapHits","reset","StateContextProvider","myShips","setMyShips","rivalHits","setRivalHits","rivalShips","setRivalShips","myHits","setMyHits","useEffect","FirebaseService","firestoreDb","this","nickname","addDoc","collection","collectionName","move","player1","readyToPlay","player2","gameId","updateDoc","doc","whoAmI","arrayUnion","useBattle","useDocument","getFirestoreDb","successNotification","message","Store","addNotification","type","dismiss","duration","MyMapInitializer","containerRef","readyLoading","setReadyLoading","battle","clientWidth","data","player","painter","actions","actionsAction","actionsReady","finally","actionsInsctruction","MissedHits","missedHits","flat","numPoints","floor","innerRadius","outerRadius","HitCell","existsHits","hitCell","setHitCell","onMouseMove","mousePosition","cellPosition","onMouseLeave","getRelativePointerPosition","Map","onHit","MyMap","acc","myNickname","RivalMap","visibleRivalMapShips","setVisibleRivalMapShips","allShipsCoords","copiedRivalShips","parse","visibleShips","forEach","prevCoordsCount","push","rivalNickname","mapSize","GamePainter","containerWidth","gameCellSideSize","setGameCellSideSize","min","OrderText","orderText","Game","setContainerWidth","containerGameContainer","Input","label","containerClassName","input","CreateGameForm","setGameId","setNickname","createLoading","setCreateLoading","createGame","createBattle","then","catch","console","log","createFormGameIdContainer","createFormGameIdDescription","createFormGameId","createFormGameIdButton","textToCopy","navigator","clipboard","isSecureContext","writeText","textArea","createElement","left","top","body","appendChild","focus","select","Promise","res","rej","execCommand","remove","copyToClipboard","placeholder","onChange","event","buttons","buttonsButton","LoginForm","loginLoading","setLoginLoading","joinToBattle","Registration","formMode","setFormMode","mainForm","mainFormButton","End","restart","winLabel","restartButton","App","firebaseApp","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","setFirestoreDb","getFirestore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.69d998ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__13fa5\",\"mainForm\":\"Registration_mainForm__30liy\",\"mainFormButton\":\"Registration_mainFormButton__3kgcf\",\"createFormGameId\":\"Registration_createFormGameId__2fCJO\",\"createFormGameIdContainer\":\"Registration_createFormGameIdContainer__1qts7\",\"createFormGameIdDescription\":\"Registration_createFormGameIdDescription__GGpja\",\"createFormGameIdButton\":\"Registration_createFormGameIdButton__1VJsp\",\"buttons\":\"Registration_buttons__2IDfJ\",\"buttonsButton\":\"Registration_buttonsButton__E--Sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyMapInitializer_container__2F5bg\",\"header\":\"MyMapInitializer_header__1a_XO\",\"painter\":\"MyMapInitializer_painter__1qVno\",\"actions\":\"MyMapInitializer_actions__3fyYO\",\"actionsAction\":\"MyMapInitializer_actionsAction__2-1Q8\",\"actionsReady\":\"MyMapInitializer_actionsReady__16WFr\",\"actionsInsctruction\":\"MyMapInitializer_actionsInsctruction__3uUQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"RulesModal_modal__2FI5z\",\"header\":\"RulesModal_header__2HDy4\",\"rulesList\":\"RulesModal_rulesList__10loH\",\"rulesListItem\":\"RulesModal_rulesListItem__2Kb6k\",\"backlightGreen\":\"RulesModal_backlightGreen__1dTQ8\",\"backlightRed\":\"RulesModal_backlightRed__1p61M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__8M1qb\",\"containerGameContainer\":\"Game_containerGameContainer__aNFiP\",\"containerNicknames\":\"Game_containerNicknames__qUvng\",\"containerNickname\":\"Game_containerNickname__1Bxe2\",\"orderText\":\"Game_orderText__2Js8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__24M3H\",\"buttonDisabled\":\"Button_buttonDisabled__3wpUj\",\"buttonLoadingWrapper\":\"Button_buttonLoadingWrapper__3M6Mn\",\"buttonLoadingLabel\":\"Button_buttonLoadingLabel__1cUEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__1_e6j\",\"overlay\":\"Modal_overlay__2Gig-\",\"content\":\"Modal_content__3i_vk\",\"contentCross\":\"Modal_contentCross__2fSSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"End_container__3ciQC\",\"winLabel\":\"End_winLabel__1Nur4\",\"restartButton\":\"End_restartButton___Iq2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3peQW\",\"label\":\"Input_label__2vsRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Spinner_ldsDualRing__2we_u\"};","export const defaultCellSideSize = 30\nexport const isMobile = window.innerWidth <= 450\n\nexport const horizontalCoords = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']\nexport const verticalCoords = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n","import React from 'react'\nimport { MapShip } from '../models/Map'\nimport { v4 as uuidv4 } from 'uuid'\nimport { defaultCellSideSize } from '../variables'\n\nexport const _positionedShips: MapPositionedShip[] = [\n  {\n    coords: [\n      {\n        x: 2,\n        y: 13,\n      },\n      {\n        x: 2,\n        y: 14,\n      },\n      {\n        x: 2,\n        y: 15,\n      },\n      {\n        x: 2,\n        y: 16,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 4,\n        y: 13,\n      },\n      {\n        x: 4,\n        y: 14,\n      },\n      {\n        x: 4,\n        y: 15,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 6,\n        y: 13,\n      },\n      {\n        x: 6,\n        y: 14,\n      },\n      {\n        x: 6,\n        y: 15,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 8,\n        y: 13,\n      },\n      {\n        x: 8,\n        y: 14,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 10,\n        y: 13,\n      },\n      {\n        x: 10,\n        y: 14,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 10,\n        y: 16,\n      },\n      {\n        x: 10,\n        y: 17,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 8,\n        y: 16,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 6,\n        y: 17,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 4,\n        y: 17,\n      },\n    ],\n    id: uuidv4(),\n  },\n  {\n    coords: [\n      {\n        x: 2,\n        y: 18,\n      },\n    ],\n    id: uuidv4(),\n  },\n]\n\nexport interface MapPositionedCoord {\n  x: number\n  y: number\n}\n\nexport interface MapPositionedShip {\n  coords: MapPositionedCoord[]\n  id: string\n}\n\nexport type ConjecturalShip = {\n  ship: MapPositionedShip\n  wrongPosition: boolean\n} | null\n\nexport interface IMyMapInitializerContext {\n  mapShips: MapShip[]\n  setMapShips: React.Dispatch<React.SetStateAction<MapShip[]>>\n\n  positionedShips: MapPositionedShip[]\n  setPositionedShips: React.Dispatch<React.SetStateAction<MapPositionedShip[]>>\n\n  conjecturalShip: ConjecturalShip\n  setConjecturalShip: React.Dispatch<React.SetStateAction<ConjecturalShip>>\n\n  rulesModalOpened: boolean\n  setRulesModelOpened: React.Dispatch<React.SetStateAction<boolean>>\n\n  initializerCellSideSize: number\n  setInitializerCellSideSize: React.Dispatch<React.SetStateAction<number>>\n\n  resetInitializer: () => void\n}\n\nexport const MyMapInitializerContext = React.createContext<IMyMapInitializerContext>({\n  mapShips: [],\n  setMapShips: () => {},\n\n  positionedShips: _positionedShips,\n  setPositionedShips: () => {},\n\n  conjecturalShip: null,\n  setConjecturalShip: () => {},\n\n  rulesModalOpened: false,\n  setRulesModelOpened: () => {},\n\n  initializerCellSideSize: defaultCellSideSize,\n  setInitializerCellSideSize: () => {},\n\n  resetInitializer: () => {},\n})\n\ninterface MyMapInitializerContextProps {}\n\nconst MyMapInitializerContextProvider: React.FC<MyMapInitializerContextProps> = ({ children }) => {\n  const [mapShips, setMapShips] = React.useState<MapShip[]>([])\n  const [positionedShips, setPositionedShips] = React.useState(_positionedShips)\n  const [conjecturalShip, setConjecturalShip] = React.useState<{\n    ship: MapPositionedShip\n    wrongPosition: boolean\n  } | null>(null)\n  const [rulesModalOpened, setRulesModelOpened] = React.useState(false)\n  const [initializerCellSideSize, setInitializerCellSideSize] = React.useState(defaultCellSideSize)\n\n  const resetInitializer = () => {\n    setMapShips([])\n    setPositionedShips(_positionedShips)\n    setConjecturalShip(null)\n  }\n\n  return (\n    <MyMapInitializerContext.Provider\n      value={{\n        mapShips,\n        setMapShips,\n        positionedShips,\n        setPositionedShips,\n        conjecturalShip,\n        setConjecturalShip,\n        rulesModalOpened,\n        setRulesModelOpened,\n        initializerCellSideSize,\n        setInitializerCellSideSize,\n        resetInitializer,\n      }}\n    >\n      {children}\n    </MyMapInitializerContext.Provider>\n  )\n}\n\nexport default MyMapInitializerContextProvider\n","import React from 'react'\nimport { Layer, Line } from 'react-konva'\nimport { Size } from '../../models/Size'\nimport { Vector2d } from 'konva/cmj/types'\nimport { defaultCellSideSize } from '../../variables'\n\ninterface CheckeredAreaProps {\n  size: Size\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst CheckeredArea: React.FC<CheckeredAreaProps> = ({\n  size,\n  position,\n  cellSideSize = defaultCellSideSize,\n}) => {\n  return (\n    <Layer width={size.width} height={size.height} x={position?.x} y={position?.y}>\n      {Array.from({ length: size.height / cellSideSize + 1 }).map((item, index) => (\n        <Line\n          key={index}\n          points={[0, index * cellSideSize, size.width, index * cellSideSize]}\n          stroke='blue'\n          strokeWidth={1}\n          opacity={0.4}\n        />\n      ))}\n      {Array.from({ length: size.width / cellSideSize + 1 }).map((item, index) => (\n        <Line\n          key={index}\n          points={[index * cellSideSize, 0, index * cellSideSize, size.height]}\n          stroke='blue'\n          strokeWidth={1}\n          opacity={0.4}\n        />\n      ))}\n    </Layer>\n  )\n}\n\nexport default CheckeredArea\n","import React from 'react'\nimport { Group, Text } from 'react-konva'\nimport { defaultCellSideSize, horizontalCoords } from '../../variables'\n\ninterface HorizontalAxisProps {\n  cellSideSize?: number\n}\n\nconst HorizontalAxis: React.FC<HorizontalAxisProps> = ({ cellSideSize = defaultCellSideSize }) => {\n  return (\n    <Group>\n      {horizontalCoords.map((coord, index) => (\n        <Group x={cellSideSize * (index + 1)} y={0} key={index}>\n          <Text\n            text={coord}\n            align='center'\n            verticalAlign='middle'\n            width={cellSideSize}\n            height={cellSideSize}\n            fontSize={cellSideSize * 0.6}\n          />\n        </Group>\n      ))}\n    </Group>\n  )\n}\n\nexport default HorizontalAxis\n","import React from 'react'\nimport { Group, Text } from 'react-konva'\nimport { defaultCellSideSize, verticalCoords } from '../../variables'\n\ninterface VerticalAxisProps {\n  cellSideSize?: number\n}\n\nconst VerticalAxis: React.FC<VerticalAxisProps> = ({ cellSideSize = defaultCellSideSize }) => {\n  return (\n    <Group>\n      {verticalCoords.map((coord, index) => (\n        <Group x={0} y={cellSideSize * (index + 1)} key={index}>\n          <Text\n            text={coord}\n            align='center'\n            verticalAlign='middle'\n            width={cellSideSize}\n            height={cellSideSize}\n            fontSize={cellSideSize * 0.6}\n          />\n        </Group>\n      ))}\n    </Group>\n  )\n}\n\nexport default VerticalAxis\n","import React from 'react'\nimport { MapCoord } from '../../models/Map'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport { Group, Line, Rect } from 'react-konva'\n\ninterface DestroyedCellProps {\n  coord: MapCoord\n  cellSideSize?: number\n  fill?: string\n}\n\nconst DestroyedCell: React.FC<DestroyedCellProps> = ({\n  coord,\n  cellSideSize = defaultCellSideSize,\n  fill,\n}) => {\n  return (\n    <Group\n      x={horizontalCoords.findIndex(c => c === coord.x) * cellSideSize}\n      y={verticalCoords.findIndex(c => c === coord.y) * cellSideSize}\n      width={cellSideSize}\n      height={cellSideSize}\n    >\n      <Rect\n        key={coord.x + coord.y}\n        width={cellSideSize}\n        height={cellSideSize}\n        strokeWidth={1}\n        stroke='red'\n        fill={fill}\n      />\n      <Line points={[0, 0, cellSideSize, cellSideSize]} strokeWidth={1} stroke='red' />\n      <Line\n        points={[cellSideSize / 2, 0, cellSideSize, cellSideSize / 2]}\n        strokeWidth={1}\n        stroke='red'\n      />\n      <Line\n        points={[0, cellSideSize / 2, cellSideSize / 2, cellSideSize]}\n        strokeWidth={1}\n        stroke='red'\n      />\n      <Line points={[cellSideSize, 0, 0, cellSideSize]} strokeWidth={1} stroke='red' />\n      <Line points={[cellSideSize / 2, 0, 0, cellSideSize / 2]} strokeWidth={1} stroke='red' />\n      <Line\n        points={[cellSideSize, cellSideSize / 2, cellSideSize / 2, cellSideSize]}\n        strokeWidth={1}\n        stroke='red'\n      />\n    </Group>\n  )\n}\n\nexport default DestroyedCell\n","import React from 'react'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport { Rect } from 'react-konva'\nimport { MapCoord } from '../../models/Map'\n\ninterface UndestroyedCellProps {\n  coord: MapCoord\n  cellSideSize?: number\n  fill?: string\n}\n\nconst UndestroyedCell: React.FC<UndestroyedCellProps> = ({\n  coord,\n  cellSideSize = defaultCellSideSize,\n  fill,\n}) => {\n  return (\n    <Rect\n      key={coord.x + coord.y}\n      x={horizontalCoords.findIndex(c => c === coord.x) * cellSideSize}\n      y={verticalCoords.findIndex(c => c === coord.y) * cellSideSize}\n      width={cellSideSize}\n      height={cellSideSize}\n      strokeWidth={1}\n      stroke='red'\n      fill={fill}\n    />\n  )\n}\n\nexport default UndestroyedCell\n","import React from 'react'\nimport { Circle, Group } from 'react-konva'\nimport { IMap, MapShip } from '../../models/Map'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport DestroyedCell from './DestroyedCell'\nimport UndestroyedCell from './UndestroyedCell'\n\ninterface ShipsProps {\n  mapState: IMap\n  onShipClick?: (ship: MapShip) => void\n  cellSideSize?: number\n  fill?: string\n}\n\nconst Ships: React.FC<ShipsProps> = ({\n  mapState: { ships, hits },\n  onShipClick,\n  cellSideSize = defaultCellSideSize,\n  fill,\n}) => {\n  return (\n    <Group>\n      {ships.map((ship, index) => (\n        <Group\n          x={cellSideSize}\n          y={cellSideSize}\n          key={index}\n          opacity={ship.destroyed ? 0.6 : 1}\n          onClick={() => onShipClick && onShipClick(ship)}\n          onTap={() => onShipClick && onShipClick(ship)}\n        >\n          {ship.coords.map(coord => {\n            const hit = hits.find(hit => hit.x === coord.x && hit.y === coord.y)\n            return (\n              <React.Fragment key={coord.x + coord.y}>\n                {ship.destroyed ? (\n                  <DestroyedCell coord={coord} cellSideSize={cellSideSize} fill={fill} />\n                ) : (\n                  <UndestroyedCell coord={coord} cellSideSize={cellSideSize} fill={fill} />\n                )}\n                {hit && !ship.destroyed && (\n                  <Circle\n                    radius={cellSideSize / 3}\n                    stroke='red'\n                    strokeWidth={1}\n                    x={\n                      horizontalCoords.findIndex(c => c === coord.x) * cellSideSize +\n                      cellSideSize / 2\n                    }\n                    y={\n                      verticalCoords.findIndex(c => c === coord.y) * cellSideSize + cellSideSize / 2\n                    }\n                  />\n                )}\n              </React.Fragment>\n            )\n          })}\n        </Group>\n      ))}\n    </Group>\n  )\n}\n\nexport default Ships\n","import React from 'react'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport Ships from '../Map/Ships'\nimport { Layer } from 'react-konva'\nimport { _positionedShips, MyMapInitializerContext } from '../../context/myMapInitializer.context'\nimport { MapShip } from '../../models/Map'\nimport { Vector2d } from 'konva/cmj/types'\n\ninterface MapShipsProps {\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst MapShips: React.FC<MapShipsProps> = ({ position, cellSideSize = defaultCellSideSize }) => {\n  const { mapShips, setMapShips, setPositionedShips } = React.useContext(MyMapInitializerContext)\n\n  const onMapShipClick = (ship: MapShip) => {\n    setMapShips(prev => prev.filter(sh => sh.id !== ship.id))\n\n    const positionedShip = _positionedShips.find(sh => sh.id === ship.id)\n    if (positionedShip) setPositionedShips(prev => [...prev, positionedShip])\n  }\n\n  return (\n    <Layer\n      x={(position?.x || 0) * cellSideSize}\n      y={(position?.y || 0) * cellSideSize}\n      width={(horizontalCoords.length + 1) * cellSideSize}\n      height={(verticalCoords.length + 1) * cellSideSize}\n    >\n      <Ships\n        mapState={{ ships: mapShips, hits: [] }}\n        onShipClick={onMapShipClick}\n        cellSideSize={cellSideSize}\n        fill='pink'\n      />\n    </Layer>\n  )\n}\n\nexport default MapShips\n","import React, { ComponentProps } from 'react'\nimport { MapPositionedCoord } from './MyMapInitializer'\nimport { Group, Rect } from 'react-konva'\nimport { defaultCellSideSize } from '../../variables'\n\ninterface PositionedShipProps extends ComponentProps<typeof Group> {\n  positionedShip: MapPositionedCoord[]\n  fill?: string\n  cellSlideSize?: number\n}\n\nconst PositionedShip: React.FC<PositionedShipProps> = ({\n  positionedShip,\n  fill,\n  cellSlideSize = defaultCellSideSize,\n  ...props\n}) => {\n  return (\n    <Group {...props}>\n      {positionedShip.map(coord => (\n        <Rect\n          key={coord.x + coord.y}\n          x={(coord.x - 1) * cellSlideSize}\n          y={(coord.y - 1) * cellSlideSize}\n          height={cellSlideSize}\n          width={cellSlideSize}\n          strokeWidth={3}\n          opacity={fill ? 0.3 : undefined}\n          fill={fill}\n        />\n      ))}\n    </Group>\n  )\n}\n\nexport default PositionedShip\n","import React from 'react'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport { Group, Layer } from 'react-konva'\nimport PositionedShip from './PositionedShip'\nimport { Vector2d } from 'konva/cmj/types'\nimport { MyMapInitializerContext } from '../../context/myMapInitializer.context'\n\ninterface ConjecturalShipProps {\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst ConjecturalShip: React.FC<ConjecturalShipProps> = ({\n  position,\n  cellSideSize = defaultCellSideSize,\n}) => {\n  const { conjecturalShip } = React.useContext(MyMapInitializerContext)\n\n  return (\n    <Layer\n      x={(position?.x || 0) * cellSideSize}\n      y={(position?.y || 0) * cellSideSize}\n      width={(horizontalCoords.length + 1) * cellSideSize}\n      height={(verticalCoords.length + 1) * cellSideSize}\n    >\n      {conjecturalShip && (\n        <Group x={cellSideSize} y={cellSideSize}>\n          <PositionedShip\n            positionedShip={conjecturalShip.ship.coords}\n            fill={conjecturalShip.wrongPosition ? 'red' : 'green'}\n            cellSlideSize={cellSideSize}\n          />\n        </Group>\n      )}\n    </Layer>\n  )\n}\n\nexport default ConjecturalShip\n","import React from 'react'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport PositionedShip from './PositionedShip'\nimport { Layer } from 'react-konva'\nimport { Vector2d } from 'konva/cmj/types'\nimport { MyMapInitializerContext } from '../../context/myMapInitializer.context'\nimport { MapPositionedCoord, MapPositionedShip } from './MyMapInitializer'\nimport Konva from 'konva'\nimport { MapCoord } from '../../models/Map'\n\ninterface PositionedShipsProps {\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst PositionedShips: React.FC<PositionedShipsProps> = ({\n  position,\n  cellSideSize = defaultCellSideSize,\n}) => {\n  const {\n    mapShips,\n    setMapShips,\n    positionedShips,\n    setPositionedShips,\n    conjecturalShip,\n    setConjecturalShip,\n  } = React.useContext(MyMapInitializerContext)\n  const positionedShipsLayerRef = React.useRef<Konva.Layer>(null)\n\n  const onPositionedDragEnd = (id: string, index: number) => {\n    if (conjecturalShip && positionedShipsLayerRef.current) {\n      if (conjecturalShip.wrongPosition) {\n        setConjecturalShip(null)\n        positionedShipsLayerRef.current!.children![index].position({ x: 0, y: 0 })\n        return\n      }\n\n      setMapShips(prev => [\n        ...prev,\n        {\n          coords: translateToShipCoords(conjecturalShip.ship.coords),\n          destroyed: false,\n          id: conjecturalShip.ship.id,\n        },\n      ])\n      setConjecturalShip(null)\n      setPositionedShips(prev => prev.filter(ship => ship.id !== id))\n    }\n  }\n\n  const onPositionedShipDragMove = (ship: MapPositionedShip, position: Vector2d) => {\n    const firstCell = ship.coords.reduce(\n      (first, sh) => (sh.y < first.y ? sh : first),\n      ship.coords[0]\n    )\n    const isHorizontal = ship.coords.length >= 2 ? ship.coords[0].y === ship.coords[1].y : true\n\n    const xPosition = Math.round((position.x + (firstCell.x - 1) * cellSideSize) / cellSideSize)\n    const yPosition = Math.round((position.y + (firstCell.y - 1) * cellSideSize) / cellSideSize)\n\n    const newShip = sortShipCells(ship)\n\n    newShip.coords = newShip.coords.map((coord, index) => {\n      const horizontalIndex = isHorizontal ? index : 0\n      const verticalIndex = isHorizontal ? 0 : index\n      const x = coord.x + (xPosition - firstCell.x)\n      const y = coord.y + (yPosition - firstCell.y)\n      return {\n        x:\n          x < 1 + horizontalIndex ||\n          x >\n            horizontalCoords.length + horizontalIndex - (isHorizontal ? ship.coords.length - 1 : 0)\n            ? x < 1 + horizontalIndex\n              ? 1 + horizontalIndex\n              : horizontalCoords.length +\n                horizontalIndex -\n                (isHorizontal ? ship.coords.length - 1 : 0)\n            : x,\n        y:\n          y < 1 + verticalIndex ||\n          y > verticalCoords.length + verticalIndex - (isHorizontal ? 0 : ship.coords.length - 1)\n            ? y < 1 + verticalIndex\n              ? 1 + verticalIndex\n              : verticalCoords.length + verticalIndex - (isHorizontal ? 0 : ship.coords.length - 1)\n            : y,\n      }\n    })\n\n    if (\n      !conjecturalShip ||\n      JSON.stringify(newShip) !== JSON.stringify(sortShipCells(conjecturalShip.ship))\n    ) {\n      const mapShipsCoords = mapShips.map(ship => translateToPositionedCoords(ship.coords))\n\n      setConjecturalShip({\n        ship: newShip,\n        wrongPosition: !!mapShipsCoords.find(coords => {\n          return coords.find(shipCoord =>\n            newShip.coords.find(\n              newShipCoord =>\n                [shipCoord.y, shipCoord.y - 1, shipCoord.y + 1].includes(newShipCoord.y) &&\n                [shipCoord.x, shipCoord.x - 1, shipCoord.x + 1].includes(newShipCoord.x)\n            )\n          )\n        }),\n      })\n    }\n  }\n\n  const rotatePositionedShip = (id: string) => {\n    setPositionedShips(prev =>\n      prev.map(ship => {\n        if (ship.id !== id) return ship\n\n        const isHorizontal = ship.coords.length >= 2 ? ship.coords[0].y === ship.coords[1].y : true\n\n        const sortedShip = sortShipCells(ship)\n        return {\n          ...sortedShip,\n          coords: isHorizontal\n            ? sortedShip.coords.map((coord, index) => ({\n                x: sortedShip.coords[0].x,\n                y: sortedShip.coords[0].y + index,\n              }))\n            : sortedShip.coords.map((coord, index) => ({\n                x: sortedShip.coords[0].x + index,\n                y: sortedShip.coords[0].y,\n              })),\n        }\n      })\n    )\n  }\n\n  return (\n    <Layer\n      x={(position?.x || 0) * cellSideSize}\n      y={(position?.y || 0) * cellSideSize}\n      ref={positionedShipsLayerRef}\n    >\n      {positionedShips.map((ship, index) => (\n        <PositionedShip\n          key={ship.id}\n          positionedShip={ship.coords}\n          cellSlideSize={cellSideSize}\n          draggable\n          fill={'blue'}\n          onDragMove={evt => onPositionedShipDragMove(ship, evt.target.position())}\n          onDragEnd={() => onPositionedDragEnd(ship.id, index)}\n          onClick={() => rotatePositionedShip(ship.id)}\n          onTap={() => rotatePositionedShip(ship.id)}\n        />\n      ))}\n    </Layer>\n  )\n}\n\nexport default PositionedShips\n\nconst sortShipCells = (ship: MapPositionedShip) => {\n  return {\n    coords: ship.coords.sort((a, b) => (a.x < b.x ? -1 : 1)).sort((a, b) => (a.y < b.y ? -1 : 1)),\n    id: ship.id,\n  }\n}\n\nconst translateToShipCoords = (coords: MapPositionedCoord[]): MapCoord[] => {\n  return coords.map(coord => ({\n    x: horizontalCoords[coord.x - 1],\n    y: verticalCoords[coord.y - 1],\n  }))\n}\n\nconst translateToPositionedCoords = (coords: MapCoord[]): MapPositionedCoord[] => {\n  return coords.map(coord => ({\n    x: horizontalCoords.findIndex(c => c === coord.x) + 1,\n    y: verticalCoords.findIndex(c => c === coord.y) + 1,\n  }))\n}\n","export const getCssVariable = (str: string) => {\n  return getComputedStyle(document.querySelector(':root') as Element).getPropertyValue(str)\n}\n","import React from 'react'\nimport { Layer, Rect, Stage } from 'react-konva'\nimport { MyMapInitializerContext } from '../../context/myMapInitializer.context'\nimport CheckeredArea from '../CheckeredArea/CheckeredArea'\nimport HorizontalAxis from '../Map/HorizontalAxis'\nimport VerticalAxis from '../Map/VerticalAxis'\nimport MapShips from './MapShips'\nimport ConjecturalShip from './ConjecturalShip'\nimport PositionedShips from './PositionedShips'\nimport { horizontalCoords, verticalCoords } from '../../variables'\nimport { getCssVariable } from '../../utils/cssVariables'\n\nconst position = { x: 1, y: 1 }\nexport const initializerMapSize = {\n  height: 20,\n  width: 13,\n}\n\ninterface MapPainterProps {}\n\nconst MapPainter: React.FC<MapPainterProps> = () => {\n  const { initializerCellSideSize } = React.useContext(MyMapInitializerContext)\n  const size = React.useMemo(\n    () => ({\n      height: initializerMapSize.height * initializerCellSideSize,\n      width: initializerMapSize.width * initializerCellSideSize,\n    }),\n    [initializerMapSize, initializerCellSideSize]\n  )\n\n  return (\n    <MyMapInitializerContext.Consumer>\n      {value => (\n        <Stage\n          width={initializerMapSize.width * initializerCellSideSize}\n          height={initializerMapSize.height * initializerCellSideSize}\n        >\n          <MyMapInitializerContext.Provider value={value}>\n            <CheckeredArea size={size} cellSideSize={initializerCellSideSize} />\n            <Layer\n              x={(position?.x || 0) * initializerCellSideSize}\n              y={(position?.y || 0) * initializerCellSideSize}\n            >\n              <HorizontalAxis cellSideSize={initializerCellSideSize} />\n              <VerticalAxis cellSideSize={initializerCellSideSize} />\n              <Rect\n                x={initializerCellSideSize}\n                y={initializerCellSideSize}\n                width={horizontalCoords.length * initializerCellSideSize}\n                height={verticalCoords.length * initializerCellSideSize}\n                strokeWidth={2}\n                stroke={getCssVariable('--blue')}\n              />\n            </Layer>\n            <MapShips position={position} cellSideSize={initializerCellSideSize} />\n            <ConjecturalShip position={position} cellSideSize={initializerCellSideSize} />\n            <PositionedShips position={position} cellSideSize={initializerCellSideSize} />\n          </MyMapInitializerContext.Provider>\n        </Stage>\n      )}\n    </MyMapInitializerContext.Consumer>\n  )\n}\n\nexport default MapPainter\n","export default function clsx(...classes: (string | undefined | { [key: string]: any })[]): string {\n  return classes\n    .map(className => {\n      if (!className) return ''\n\n      if (typeof className === 'string') return className\n\n      if (typeof className === 'object') {\n        const objKeys = Object.keys(className)\n\n        return objKeys\n          .map(key => {\n            if (className[key]) {\n              return key\n            }\n            return ''\n          })\n          .join(' ')\n      }\n\n      return ''\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport styles from './Spinner.module.sass'\n\ninterface SpinnerProps {\n  size?: number\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ size = 30 }) => {\n  return <div style={{ width: size, height: size }} className={styles.ldsDualRing} />\n}\n\nexport default Spinner\n","import React from 'react'\nimport styles from './Button.module.sass'\nimport clsx from '../../utils/clsx'\nimport Spinner from '../Spinner/Spinner'\n\ninterface ButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  disabled?: boolean\n  loading?: boolean\n  loadingLabel?: string\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  disabled,\n  loading,\n  loadingLabel,\n  className,\n  ...props\n}) => {\n  return (\n    <button\n      className={clsx(styles.button, className, { [styles.buttonDisabled]: disabled })}\n      {...props}\n    >\n      {loading ? (\n        <div className={styles.buttonLoadingWrapper}>\n          <Spinner />\n          <span className={styles.buttonLoadingLabel}>{loadingLabel}</span>\n        </div>\n      ) : (\n        children\n      )}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport styles from './Modal.module.sass'\nimport clsx from '../../utils/clsx'\n\ninterface ModalProps {\n  opened?: boolean\n  onClose?: () => void\n  className?: string\n}\n\nconst Modal: React.FC<ModalProps> = ({ opened = false, onClose, className, children }) => {\n  return (\n    <>\n      {opened ? (\n        <div className={styles.container}>\n          <div className={styles.overlay} onClick={onClose} />\n          <div className={clsx(styles.content, className)}>\n            <span className={styles.contentCross} onClick={onClose} />\n            {children}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport styles from './RulesModal.module.sass'\nimport Modal from '../../Modal/Modal'\nimport { MyMapInitializerContext } from '../../../context/myMapInitializer.context'\n\ninterface RulesModalProps {}\n\nconst RulesModal: React.FC<RulesModalProps> = () => {\n  const { rulesModalOpened, setRulesModelOpened } = React.useContext(MyMapInitializerContext)\n\n  return (\n    <Modal\n      opened={rulesModalOpened}\n      onClose={() => setRulesModelOpened(false)}\n      className={styles.modal}\n    >\n      <h4 className={styles.header}>Некоторые правила:</h4>\n      <ol className={styles.rulesList}>\n        <li className={styles.rulesListItem}>\n          Корабли не могут стоять рядом друг с другом. <br />\n          <br />\n          Если корабль можно поставить, то под ним будет гореть{' '}\n          <span className={styles.backlightGreen}>зелёная подсветка</span>\n          <br />\n          <br />\n          Если корабль поставить нельзя, то будет гореть{' '}\n          <span className={styles.backlightRed}>красная подсветка</span>\n        </li>\n      </ol>\n    </Modal>\n  )\n}\n\nexport default RulesModal\n","import React from 'react'\nimport { IMap, MapCoord, MapShip } from '../models/Map'\n\nexport type Step = 'register' | 'initializer' | 'game' | 'end'\n\nexport type Game = {\n  id: string\n  player: 'player1' | 'player2'\n  myNickname: string\n  rivalNickname: string\n}\n\nexport interface IStateContext {\n  game: Game | null\n  setGame: React.Dispatch<React.SetStateAction<Game | null>>\n  step: Step\n  setStep: React.Dispatch<React.SetStateAction<Step>>\n\n  myMap: IMap\n  setMyMapShips: React.Dispatch<React.SetStateAction<MapShip[]>>\n  setMyMapHits: React.Dispatch<React.SetStateAction<MapCoord[]>>\n\n  rivalMap: IMap\n  setRivalMapShips: React.Dispatch<React.SetStateAction<MapShip[]>>\n  setRivalMapHits: React.Dispatch<React.SetStateAction<MapCoord[]>>\n\n  reset: () => void\n}\n\nexport const StateContext = React.createContext<IStateContext>({\n  game: null,\n  setGame: () => {},\n\n  step: 'register',\n  setStep: () => {},\n\n  myMap: {\n    ships: [],\n    hits: [],\n  },\n  setMyMapShips: () => {},\n  setMyMapHits: () => {},\n\n  rivalMap: {\n    ships: [],\n    hits: [],\n  },\n  setRivalMapShips: () => {},\n  setRivalMapHits: () => {},\n\n  reset: () => {},\n})\n\nconst StateContextProvider: React.FC = ({ children }) => {\n  const [step, setStep] = React.useState<Step>('register')\n  const [game, setGame] = React.useState<Game | null>(null)\n  const [myShips, setMyShips] = React.useState<MapShip[]>([])\n  const [rivalHits, setRivalHits] = React.useState<MapCoord[]>([])\n  const [rivalShips, setRivalShips] = React.useState<MapShip[]>([])\n  const [myHits, setMyHits] = React.useState<MapCoord[]>([])\n\n  const reset = () => {\n    setStep('initializer')\n    setMyShips([])\n    setRivalShips([])\n    setMyHits([])\n    setRivalHits([])\n  }\n\n  React.useEffect(() => {\n    setMyShips(prev =>\n      prev.map(ship => {\n        const destroyed = !ship.coords.filter(\n          coord => !rivalHits.find(hit => coord.x === hit.x && coord.y === hit.y)\n        ).length\n        return {\n          ...ship,\n          destroyed,\n        }\n      })\n    )\n  }, [rivalHits])\n\n  React.useEffect(() => {\n    setRivalShips(prev =>\n      prev.map(ship => {\n        const destroyed = !ship.coords.filter(\n          coord => !myHits.find(hit => coord.x === hit.x && coord.y === hit.y)\n        ).length\n        return {\n          ...ship,\n          destroyed,\n        }\n      })\n    )\n  }, [myHits])\n\n  return (\n    <StateContext.Provider\n      value={{\n        game,\n        setGame,\n\n        step,\n        setStep,\n\n        myMap: { ships: myShips, hits: rivalHits },\n        setMyMapShips: setMyShips,\n        setMyMapHits: setRivalHits,\n\n        rivalMap: { ships: rivalShips, hits: myHits },\n        setRivalMapShips: setRivalShips,\n        setRivalMapHits: setMyHits,\n\n        reset,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  )\n}\n\nexport default StateContextProvider\n","import { addDoc, collection, Firestore, updateDoc, arrayUnion, doc } from 'firebase/firestore'\nimport { FirebaseModel } from '../models/FirebaseModel'\nimport { MapCoord, MapShip } from '../models/Map'\n\nexport class FirebaseService {\n  static readonly collectionName = 'battles'\n  private static firestoreDb: Firestore\n\n  static setFirestoreDb(firestoreDb: Firestore) {\n    this.firestoreDb = firestoreDb\n  }\n\n  static getFirestoreDb() {\n    return this.firestoreDb\n  }\n\n  static createBattle(nickname: string) {\n    return addDoc(collection(this.firestoreDb, this.collectionName), {\n      move: 'player1',\n      player1: {\n        readyToPlay: false,\n        nickname,\n        map: [],\n        hits: [],\n      },\n      player2: {\n        readyToPlay: false,\n        nickname: null,\n        map: [],\n        hits: [],\n      },\n    } as FirebaseModel)\n  }\n\n  static joinToBattle(gameId: string, nickname: string) {\n    return updateDoc(doc(this.firestoreDb, this.collectionName, gameId), {\n      'player2.nickname': nickname,\n    } as Partial<FirebaseModel>)\n  }\n\n  static readyToPlay(gameId: string, whoAmI: 'player1' | 'player2', map: MapShip[]) {\n    const document = doc(this.firestoreDb, this.collectionName, gameId)\n    return updateDoc(document, {\n      [`${whoAmI}.map`]: map,\n      [`${whoAmI}.readyToPlay`]: true,\n    } as Partial<FirebaseModel>)\n  }\n\n  static hit(\n    gameId: string,\n    coord: MapCoord,\n    whoAmI: 'player1' | 'player2',\n    move: 'player1' | 'player2'\n  ) {\n    return updateDoc(doc(this.firestoreDb, this.collectionName, gameId), {\n      move,\n      [`${whoAmI === 'player1' ? 'player2' : 'player1'}.hits`]: arrayUnion(coord),\n    })\n  }\n\n  static reset(gameId: string) {\n    return updateDoc(doc(this.firestoreDb, this.collectionName, gameId), {\n      'player1.hits': [],\n      'player1.map': [],\n      'player1.readyToPlay': false,\n      'player2.hits': [],\n      'player2.map': [],\n      'player2.readyToPlay': false,\n    })\n  }\n}\n","import { useDocument } from 'react-firebase-hooks/firestore'\nimport { FirebaseModel } from '../models/FirebaseModel'\nimport { doc, DocumentReference } from 'firebase/firestore'\nimport { FirebaseService } from '../utils/FirebaseService'\n\nexport function useBattle(gameId?: string | undefined) {\n  return useDocument<FirebaseModel>(\n    gameId\n      ? (doc(\n          FirebaseService.getFirestoreDb(),\n          FirebaseService.collectionName,\n          gameId\n        ) as DocumentReference<FirebaseModel>)\n      : undefined\n  )\n}\n","import { Store } from 'react-notifications-component'\n\nexport const successNotification = (message: string) => {\n  Store.addNotification({\n    type: 'success',\n    message,\n    dismiss: {\n      duration: 3000,\n    },\n    container: 'top-right',\n  })\n}\n\nexport const warningNotification = (message: string) => {\n  Store.addNotification({\n    type: 'warning',\n    message,\n    dismiss: {\n      duration: 3000,\n    },\n    container: 'top-right',\n  })\n}\n\nexport const errorNotification = (message: string) => {\n  Store.addNotification({\n    type: 'danger',\n    message,\n    dismiss: {\n      duration: 3000,\n    },\n    container: 'top-right',\n  })\n}\n","import React from 'react'\nimport styles from './MyMapInitializer.module.sass'\nimport MapPainter, { initializerMapSize } from './MapPainter'\nimport Button from '../Button/Button'\nimport { MyMapInitializerContext } from '../../context/myMapInitializer.context'\nimport clsx from '../../utils/clsx'\nimport RulesModal from './RulesModal/RulesModal'\nimport { StateContext } from '../../context/state.context'\nimport { FirebaseService } from '../../utils/FirebaseService'\nimport { Store } from 'react-notifications-component'\nimport { useBattle } from '../../hooks/useBattle'\nimport { successNotification } from '../../utils/notifications'\n\nexport interface MapPositionedCoord {\n  x: number\n  y: number\n}\n\nexport interface MapPositionedShip {\n  coords: MapPositionedCoord[]\n  id: string\n}\n\ninterface MyMapInitializerProps {}\n\nconst MyMapInitializer: React.FC<MyMapInitializerProps> = () => {\n  const containerRef = React.useRef<HTMLDivElement>(null)\n  const { setStep, setMyMapShips, setRivalMapShips, game } = React.useContext(StateContext)\n  const { mapShips, positionedShips, setRulesModelOpened, setInitializerCellSideSize } =\n    React.useContext(MyMapInitializerContext)\n  const [readyLoading, setReadyLoading] = React.useState(false)\n  const [battle] = useBattle(game?.id)\n\n  const onReadyClick = () => {\n    if (game) {\n      setReadyLoading(true)\n      FirebaseService.readyToPlay(game.id, game.player, mapShips).finally(() =>\n        setReadyLoading(false)\n      )\n    }\n  }\n\n  React.useEffect(() => {\n    if (containerRef.current) {\n      setInitializerCellSideSize(containerRef.current.clientWidth / initializerMapSize.width)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (\n      data &&\n      ((game?.player === 'player1' && data.player2.readyToPlay && !data.player1.readyToPlay) ||\n        (game?.player === 'player2' && data.player1.readyToPlay && !data.player2.readyToPlay))\n    ) {\n      successNotification(\n        `${game?.player === 'player1' ? data.player2.nickname : data.player1.nickname} готов к бою!`\n      )\n    }\n  }, [battle])\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (game && data && data.player1.readyToPlay && data.player2.readyToPlay) {\n      setStep('game')\n      setMyMapShips(mapShips)\n      setRivalMapShips(data[game.player === 'player1' ? 'player2' : 'player1'].map)\n      Store.addNotification({\n        type: 'success',\n        message: 'Игра началась!',\n        container: 'top-right',\n        dismiss: {\n          duration: 3000,\n        },\n      })\n    }\n  }, [battle])\n\n  return (\n    <div className={styles.container} ref={containerRef}>\n      <h2 className={styles.header}>Расставь свои корабли!</h2>\n      <div className={styles.painter}>\n        <MapPainter />\n      </div>\n      <div className={styles.actions}>\n        <Button\n          className={clsx(styles.actionsAction, styles.actionsReady)}\n          disabled={!!positionedShips.length}\n          onClick={onReadyClick}\n          loading={\n            readyLoading ||\n            (game?.player === 'player1'\n              ? battle?.data()?.player1.readyToPlay && !battle?.data()?.player2.readyToPlay\n              : battle?.data()?.player2.readyToPlay && !battle?.data()?.player1.readyToPlay)\n          }\n          loadingLabel={\n            (\n              game?.player === 'player1'\n                ? battle?.data()?.player1.readyToPlay && !battle?.data()?.player2.readyToPlay\n                : battle?.data()?.player2.readyToPlay && !battle?.data()?.player1.readyToPlay\n            )\n              ? 'Ожидание второго игрока'\n              : undefined\n          }\n        >\n          Готов!\n        </Button>\n        <Button\n          className={clsx(styles.actionsAction, styles.actionsInsctruction)}\n          onClick={() => setRulesModelOpened(true)}\n        >\n          ?\n        </Button>\n        <RulesModal />\n      </div>\n    </div>\n  )\n}\n\nexport default MyMapInitializer\n","import React from 'react'\nimport { Group, Star } from 'react-konva'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport { IMap } from '../../models/Map'\n\ninterface MissedHitsProps {\n  mapState: IMap\n  cellSideSize?: number\n}\n\nconst MissedHits: React.FC<MissedHitsProps> = ({\n  mapState: { ships, hits },\n  cellSideSize = defaultCellSideSize,\n}) => {\n  const missedHits = React.useMemo(() => {\n    return hits.filter(hit => {\n      const shipsCoords = ships.map(ship => ship.coords).flat()\n\n      return !shipsCoords.find(coord => coord.x === hit.x && coord.y === hit.y)\n    })\n  }, [ships, hits])\n\n  return (\n    <Group x={cellSideSize} y={cellSideSize}>\n      {missedHits.map(hit => (\n        <Star\n          key={hit.x + hit.y}\n          numPoints={Math.floor(cellSideSize / 4)}\n          innerRadius={cellSideSize / 9}\n          outerRadius={cellSideSize / 3}\n          strokeWidth={1}\n          stroke='red'\n          x={horizontalCoords.findIndex(c => c === hit.x) * cellSideSize + cellSideSize / 2}\n          y={verticalCoords.findIndex(c => c === hit.y) * cellSideSize + cellSideSize / 2}\n        />\n      ))}\n    </Group>\n  )\n}\n\nexport default MissedHits\n","import React from 'react'\nimport { Group, Rect } from 'react-konva'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport { MapCoord } from '../../models/Map'\nimport { Vector2d } from 'konva/cmj/types'\n\ninterface HitCellProps {\n  cellSideSize?: number\n  onClick: (coord: MapCoord) => void\n  existsHits: MapCoord[]\n  disabled: boolean\n}\n\nconst HitCell: React.FC<HitCellProps> = ({\n  cellSideSize = defaultCellSideSize,\n  onClick,\n  existsHits,\n  disabled,\n}) => {\n  const [hitCell, setHitCell] = React.useState<{\n    position: MapCoord\n    wrongPosition: boolean\n  } | null>(null)\n\n  const onMouseMove = (mousePosition: Vector2d) => {\n    const cellPosition = {\n      x:\n        mousePosition.x < 0\n          ? 'a'\n          : mousePosition.x > horizontalCoords.length * cellSideSize\n          ? horizontalCoords[horizontalCoords.length - 1]\n          : horizontalCoords[Math.floor(mousePosition.x / cellSideSize)],\n      y:\n        mousePosition.y < 0\n          ? '1'\n          : mousePosition.y > verticalCoords.length * cellSideSize\n          ? verticalCoords[verticalCoords.length - 1]\n          : verticalCoords[Math.floor(mousePosition.y / cellSideSize)],\n    }\n\n    if (!disabled && JSON.stringify(cellPosition) !== JSON.stringify(hitCell)) {\n      setHitCell({\n        position: cellPosition,\n        wrongPosition: !!existsHits.find(\n          hit => hit.x === cellPosition.x && hit.y === cellPosition.y\n        ),\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    if (disabled) setHitCell(null)\n  }, [disabled])\n\n  return (\n    <Group x={cellSideSize} y={cellSideSize} onMouseLeave={() => setHitCell(null)}>\n      <Rect\n        width={horizontalCoords.length * cellSideSize}\n        height={verticalCoords.length * cellSideSize}\n        fill='red'\n        opacity={0.1}\n        onMouseMove={evt => onMouseMove(evt.target.getRelativePointerPosition())}\n        onTap={evt => onMouseMove(evt.target.getRelativePointerPosition())}\n      />\n      {hitCell && (\n        <Rect\n          x={horizontalCoords.findIndex(c => c === hitCell.position.x) * cellSideSize}\n          y={verticalCoords.findIndex(c => c === hitCell.position.y) * cellSideSize}\n          height={cellSideSize}\n          width={cellSideSize}\n          fill={hitCell.wrongPosition ? 'red' : 'green'}\n          opacity={0.5}\n          onClick={() => !hitCell.wrongPosition && !disabled && onClick(hitCell.position)}\n          onTap={() => !hitCell.wrongPosition && !disabled && onClick(hitCell.position)}\n        />\n      )}\n    </Group>\n  )\n}\n\nexport default HitCell\n","import React from 'react'\nimport { defaultCellSideSize, horizontalCoords, verticalCoords } from '../../variables'\nimport HorizontalAxis from './HorizontalAxis'\nimport VerticalAxis from './VerticalAxis'\nimport Ships from './Ships'\nimport MissedHits from './MissedHits'\nimport { Layer, Rect, Text } from 'react-konva'\nimport { Vector2d } from 'konva/cmj/types'\nimport { IMap, MapCoord } from '../../models/Map'\nimport { getCssVariable } from '../../utils/cssVariables'\nimport HitCell from './HitCell'\n\ninterface MapProps {\n  position?: Vector2d\n  mapState: IMap\n  cellSideSize?: number\n  nickname?: string\n  hit?: {\n    onHit: (coord: MapCoord) => void\n    hits: MapCoord[]\n    disabled: boolean\n  }\n}\n\nconst Map: React.FC<MapProps> = ({\n  mapState,\n  position,\n  cellSideSize = defaultCellSideSize,\n  nickname,\n  hit,\n}) => {\n  return (\n    <Layer x={(position?.x || 0) * cellSideSize} y={(position?.y || 0) * cellSideSize}>\n      <HorizontalAxis cellSideSize={cellSideSize} />\n      <VerticalAxis cellSideSize={cellSideSize} />\n      {nickname && <Text text={nickname} fontSize={20} y={-20} x={10} />}\n      <Rect\n        x={cellSideSize}\n        y={cellSideSize}\n        width={horizontalCoords.length * cellSideSize}\n        height={verticalCoords.length * cellSideSize}\n        stroke={getCssVariable('--blue')}\n        strokeWidth={3}\n      />\n      <Ships mapState={mapState} cellSideSize={cellSideSize} />\n      <MissedHits mapState={mapState} cellSideSize={cellSideSize} />\n      {hit && (\n        <HitCell\n          cellSideSize={cellSideSize}\n          onClick={hit.onHit}\n          existsHits={hit.hits}\n          disabled={hit.disabled}\n        />\n      )}\n    </Layer>\n  )\n}\n\nexport default Map\n","import React from 'react'\nimport { Vector2d } from 'konva/cmj/types'\nimport Map from '../Map/Map'\nimport { StateContext } from '../../context/state.context'\nimport { useBattle } from '../../hooks/useBattle'\n\ninterface MyMapProps {\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst MyMap: React.FC<MyMapProps> = ({ position, cellSideSize }) => {\n  const { setStep, myMap, setMyMapHits, game } = React.useContext(StateContext)\n  const [battle] = useBattle(game?.id)\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (game && data) {\n      if (game.player === 'player1') {\n        setMyMapHits(data.player1.hits)\n      } else {\n        setMyMapHits(data.player2.hits)\n      }\n    }\n  }, [battle])\n\n  React.useEffect(() => {\n    if (myMap.ships.reduce((acc, ship) => acc && ship.destroyed, true)) {\n      setStep('end')\n    }\n  }, [myMap])\n\n  return (\n    <Map\n      position={position}\n      mapState={myMap}\n      cellSideSize={cellSideSize}\n      nickname={game?.myNickname}\n    />\n  )\n}\n\nexport default MyMap\n","import React from 'react'\nimport Map from '../Map/Map'\nimport { Vector2d } from 'konva/cmj/types'\nimport { StateContext } from '../../context/state.context'\nimport { defaultCellSideSize } from '../../variables'\nimport { MapCoord, MapShip } from '../../models/Map'\nimport { FirebaseService } from '../../utils/FirebaseService'\nimport { useBattle } from '../../hooks/useBattle'\n\ninterface RivalMapProps {\n  position?: Vector2d\n  cellSideSize?: number\n}\n\nconst RivalMap: React.FC<RivalMapProps> = ({ position, cellSideSize = defaultCellSideSize }) => {\n  const { setStep, rivalMap, setRivalMapHits, game } = React.useContext(StateContext)\n  const [visibleRivalMapShips, setVisibleRivalMapShips] = React.useState<MapShip[]>([])\n  const [battle] = useBattle(game?.id)\n\n  const onHit = async (coord: MapCoord) => {\n    if (game) {\n      const allShipsCoords = rivalMap.ships.map(ship => ship.coords).flat()\n      const hit = !!allShipsCoords.find(c => c.x === coord.x && c.y === coord.y)\n      await FirebaseService.hit(\n        game.id,\n        coord,\n        game.player,\n\n        hit ? game.player : game.player === 'player1' ? 'player2' : 'player1'\n      )\n    }\n  }\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (game && data) {\n      if (game.player === 'player1') {\n        setRivalMapHits(data.player2.hits)\n      } else {\n        setRivalMapHits(data.player1.hits)\n      }\n    }\n  }, [battle])\n\n  React.useEffect(() => {\n    if (\n      rivalMap.ships.length === visibleRivalMapShips.length &&\n      visibleRivalMapShips.reduce((acc, ship) => acc && ship.destroyed, true)\n    ) {\n      setStep('end')\n    }\n  }, [visibleRivalMapShips])\n\n  React.useEffect(() => {\n    const copiedRivalShips = JSON.parse(JSON.stringify(rivalMap.ships)) as MapShip[]\n\n    const visibleShips: MapShip[] = []\n    copiedRivalShips.forEach(ship => {\n      const shipVisibility = !!ship.coords.find(coord =>\n        rivalMap.hits.find(hit => coord.x === hit.x && coord.y === hit.y)\n      )\n      if (shipVisibility) {\n        const prevCoordsCount = ship.coords.length\n        ship.coords = ship.coords.filter(coord =>\n          rivalMap.hits.find(hit => coord.x === hit.x && coord.y === hit.y)\n        )\n        if (prevCoordsCount === ship.coords.length) ship.destroyed = true\n\n        visibleShips.push(ship)\n      }\n    })\n    setVisibleRivalMapShips(visibleShips)\n  }, [rivalMap.hits])\n\n  return (\n    <Map\n      position={position}\n      mapState={{ ships: visibleRivalMapShips, hits: rivalMap.hits }}\n      cellSideSize={cellSideSize}\n      nickname={game?.rivalNickname}\n      hit={{\n        onHit,\n        hits: rivalMap.hits,\n        disabled: battle?.data()?.move !== game?.player,\n      }}\n    />\n  )\n}\n\nexport default RivalMap\n","import React from 'react'\nimport { Stage } from 'react-konva'\nimport { StateContext } from '../../context/state.context'\nimport CheckeredArea from '../CheckeredArea/CheckeredArea'\nimport MyMap from '../MyMap/MyMap'\nimport RivalMap from '../RivalMap/RivalMap'\nimport { defaultCellSideSize, isMobile } from '../../variables'\n\nexport const mapSize = {\n  height: isMobile ? 27 : 15,\n  width: isMobile ? 15 : 27,\n}\n\ninterface GamePainterProps {\n  containerWidth: number\n}\n\nconst GamePainter: React.FC<GamePainterProps> = ({ containerWidth }) => {\n  const [gameCellSideSize, setGameCellSideSize] = React.useState(defaultCellSideSize)\n\n  React.useEffect(() => {\n    setGameCellSideSize(Math.min(containerWidth, 800) / mapSize.width)\n  }, [containerWidth])\n\n  return (\n    <StateContext.Consumer>\n      {value => (\n        <Stage width={mapSize.width * gameCellSideSize} height={mapSize.height * gameCellSideSize}>\n          <StateContext.Provider value={value}>\n            <CheckeredArea\n              size={{\n                width: mapSize.width * gameCellSideSize,\n                height: mapSize.height * gameCellSideSize,\n              }}\n              cellSideSize={gameCellSideSize}\n            />\n            <MyMap position={{ x: isMobile ? 2 : 1, y: 2 }} cellSideSize={gameCellSideSize} />\n            <RivalMap\n              position={{ x: isMobile ? 2 : 14, y: isMobile ? 14 : 2 }}\n              cellSideSize={gameCellSideSize}\n            />\n          </StateContext.Provider>\n        </Stage>\n      )}\n    </StateContext.Consumer>\n  )\n}\n\nexport default GamePainter\n","import React from 'react'\nimport styles from './Game.module.sass'\nimport { StateContext } from '../../context/state.context'\nimport { useBattle } from '../../hooks/useBattle'\n\ninterface OrderTextProps {}\n\nconst OrderText: React.FC<OrderTextProps> = () => {\n  const { game } = React.useContext(StateContext)\n  const [battle] = useBattle(game?.id)\n\n  return (\n    <div>\n      {game && battle?.data() ? (\n        battle?.data()?.move === game.player ? (\n          <p className={styles.orderText}>Твой ход!</p>\n        ) : (\n          <p className={styles.orderText}>Теперь ходит соперник. Ждём!</p>\n        )\n      ) : null}\n    </div>\n  )\n}\n\nexport default OrderText\n","import React from 'react'\nimport styles from './Game.module.sass'\nimport GamePainter from './GamePainter'\nimport OrderText from './OrderText'\n\ninterface GameProps {}\n\nconst Game: React.FC<GameProps> = () => {\n  const containerRef = React.useRef<HTMLDivElement>(null)\n  const [containerWidth, setContainerWidth] = React.useState(0)\n\n  React.useEffect(() => {\n    if (containerRef.current) {\n      setContainerWidth(containerRef.current.clientWidth)\n    }\n  }, [])\n\n  return (\n    <div className={styles.container} ref={containerRef}>\n      <OrderText />\n      <div className={styles.containerGameContainer}>\n        <GamePainter containerWidth={containerWidth} />\n      </div>\n    </div>\n  )\n}\n\nexport default Game\n","import React from 'react'\nimport styles from './Input.module.sass'\nimport clsx from '../../utils/clsx'\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  containerClassName?: string\n}\n\nconst Input: React.FC<InputProps> = ({ label, className, containerClassName, ...props }) => {\n  return (\n    <div className={clsx(containerClassName)}>\n      {label && <span className={styles.label}>{label}</span>}\n      <input className={clsx(styles.input, className)} type='text' {...props} />\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport styles from './Registration.module.sass'\nimport Button from '../Button/Button'\nimport { copyToClipboard } from '../../utils/copyToClipboard'\nimport Input from '../Input/Input'\nimport { FirebaseService } from '../../utils/FirebaseService'\nimport { StateContext } from '../../context/state.context'\nimport { useBattle } from '../../hooks/useBattle'\nimport { successNotification } from '../../utils/notifications'\n\ninterface CreateGameFormProps {\n  onClose: () => void\n}\n\nconst CreateGameForm: React.FC<CreateGameFormProps> = ({ onClose }) => {\n  const { setGame, setStep } = React.useContext(StateContext)\n  const [gameId, setGameId] = React.useState('')\n  const [nickname, setNickname] = React.useState('')\n  const [createLoading, setCreateLoading] = React.useState(false)\n  const [battle] = useBattle(gameId)\n\n  const createGame = async () => {\n    setCreateLoading(true)\n    FirebaseService.createBattle(nickname)\n      .then(value => {\n        setGameId(value.id)\n        successNotification('Битва создана успешно')\n      })\n      .catch(console.log)\n      .finally(() => setCreateLoading(false))\n  }\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (data && data.player1.nickname && data.player2.nickname) {\n      setGame({\n        id: gameId,\n        player: 'player1',\n        myNickname: data.player1.nickname,\n        rivalNickname: data.player2.nickname,\n      })\n      setStep('initializer')\n    }\n  }, [battle])\n\n  return (\n    <>\n      <div className={styles.createFormGameIdContainer}>\n        <p className={styles.createFormGameIdDescription}>Этот код нужно передать сопернику:</p>\n        <p className={styles.createFormGameId}>{gameId}</p>\n        {!gameId && (\n          <p className={styles.createFormGameId}>Создайте битву, затем здесь появится код</p>\n        )}\n        <Button\n          className={styles.createFormGameIdButton}\n          onClick={() => copyToClipboard(gameId)}\n          disabled={!gameId}\n        >\n          Скопировать\n        </Button>\n      </div>\n      <Input\n        placeholder='Введи свой никнэйм'\n        label='Никнэйм*'\n        onChange={event => setNickname(event.target.value)}\n        value={nickname}\n        disabled={!!battle?.data()}\n      />\n      <div className={styles.buttons}>\n        <Button\n          onClick={createGame}\n          className={styles.buttonsButton}\n          disabled={!nickname || !!battle?.data()}\n          loading={createLoading || (battle?.data() && !battle?.data()?.player2.nickname)}\n          loadingLabel={\n            battle?.data() && !battle?.data()?.player2.nickname\n              ? 'Ожидание подключения игрока'\n              : 'Загрузка'\n          }\n        >\n          Создать\n        </Button>\n        <Button onClick={onClose} className={styles.buttonsButton}>\n          Назад\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default CreateGameForm\n","export function copyToClipboard(textToCopy: string) {\n  // navigator clipboard api needs a secure context (https)\n  if (navigator.clipboard && window.isSecureContext) {\n    // navigator clipboard api method'\n    return navigator.clipboard.writeText(textToCopy)\n  } else {\n    // text area method\n    let textArea = document.createElement('textarea')\n    textArea.value = textToCopy\n    // make the textarea out of viewport\n    textArea.style.position = 'fixed'\n    textArea.style.left = '-999999px'\n    textArea.style.top = '-999999px'\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n    return new Promise<void>((res, rej) => {\n      // here the magic happens\n      document.execCommand('copy') ? res() : rej()\n      textArea.remove()\n    })\n  }\n}\n","import React from 'react'\nimport Input from '../Input/Input'\nimport Button from '../Button/Button'\nimport styles from './Registration.module.sass'\nimport { FirebaseService } from '../../utils/FirebaseService'\nimport { StateContext } from '../../context/state.context'\nimport { useBattle } from '../../hooks/useBattle'\nimport { errorNotification, warningNotification } from '../../utils/notifications'\n\ninterface LoginFormProps {\n  onClose: () => void\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ onClose }) => {\n  const { setGame, setStep } = React.useContext(StateContext)\n  const [gameId, setGameId] = React.useState('')\n  const [nickname, setNickname] = React.useState('')\n  const [loginLoading, setLoginLoading] = React.useState(false)\n  const [battle] = useBattle(gameId)\n\n  React.useEffect(() => {\n    if (nickname === battle?.data()?.player1.nickname) {\n      warningNotification('Ники не могут быть похожи. Возьмите другой ник')\n    }\n  }, [nickname])\n\n  React.useEffect(() => {\n    const data = battle?.data()\n    if (data && data.player1.nickname && data.player2.nickname) {\n      setGame({\n        id: gameId,\n        player: 'player2',\n        myNickname: data.player2.nickname,\n        rivalNickname: data.player1.nickname,\n      })\n      setStep('initializer')\n    }\n  }, [battle])\n\n  const login = () => {\n    setLoginLoading(true)\n    FirebaseService.joinToBattle(gameId, nickname)\n      .then(() => console.log('joined to game'))\n      .catch(() => errorNotification('Что-то пошло не так'))\n      .finally(() => setLoginLoading(false))\n  }\n\n  return (\n    <>\n      <Input\n        label='Вставь сюда код игры'\n        placeholder='Код игры'\n        onChange={event => setGameId(event.target.value)}\n        value={gameId}\n      />\n      <Input\n        placeholder='Введи свой никнэйм'\n        label='Никнэйм*'\n        onChange={event => setNickname(event.target.value)}\n        value={nickname}\n      />\n      <div className={styles.buttons}>\n        <Button\n          onClick={login}\n          className={styles.buttonsButton}\n          disabled={!nickname || !gameId || nickname === battle?.data()?.player1.nickname}\n          loading={loginLoading}\n        >\n          Войти\n        </Button>\n        <Button onClick={onClose} className={styles.buttonsButton}>\n          Назад\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport styles from './Registration.module.sass'\nimport Button from '../Button/Button'\nimport CreateGameForm from './CreateGameForm'\nimport LoginForm from './LoginForm'\n\ninterface RegistrationProps {}\n\nconst Registration: React.FC<RegistrationProps> = () => {\n  const [formMode, setFormMode] = React.useState<'create' | 'login' | null>(null)\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.mainForm}>\n        {formMode === null && (\n          <>\n            <Button className={styles.mainFormButton} onClick={() => setFormMode('create')}>\n              Создать игру\n            </Button>\n            <Button className={styles.mainFormButton} onClick={() => setFormMode('login')}>\n              Войти с существующую\n            </Button>\n          </>\n        )}\n        {formMode === 'create' && <CreateGameForm onClose={() => setFormMode(null)} />}\n        {formMode === 'login' && <LoginForm onClose={() => setFormMode(null)} />}\n      </div>\n    </div>\n  )\n}\n\nexport default Registration\n","import React from 'react'\nimport styles from './End.module.sass'\nimport { StateContext } from '../../context/state.context'\nimport Button from '../Button/Button'\nimport { FirebaseService } from '../../utils/FirebaseService'\nimport { MyMapInitializerContext } from '../../context/myMapInitializer.context'\n\ninterface EndProps {}\n\nconst End: React.FC<EndProps> = () => {\n  const { myMap, rivalMap, reset, game } = React.useContext(StateContext)\n  const { resetInitializer } = React.useContext(MyMapInitializerContext)\n\n  const restart = async () => {\n    if (game) {\n      reset()\n      resetInitializer()\n      await FirebaseService.reset(game.id)\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {!!myMap.ships.length && myMap.ships.reduce((acc, ship) => ship.destroyed && acc, true) && (\n        <p className={styles.winLabel}>Вы проиграли(((</p>\n      )}\n      {!!rivalMap.ships.length &&\n        rivalMap.ships.reduce((acc, ship) => ship.destroyed && acc, true) && (\n          <p className={styles.winLabel}>Вы выиграли!</p>\n        )}\n      <Button onClick={restart} className={styles.restartButton}>\n        Играть снова\n      </Button>\n    </div>\n  )\n}\n\nexport default End\n","import React from 'react'\nimport MyMapInitializer from './components/MyMapInitializer/MyMapInitializer'\nimport { StateContext } from './context/state.context'\nimport Game from './components/Game/Game'\nimport Registration from './components/Registration/Registration'\nimport { ReactNotifications } from 'react-notifications-component'\nimport End from './components/End/End'\n\nfunction App() {\n  const { step } = React.useContext(StateContext)\n\n  return (\n    <div className='app'>\n      {step === 'register' && <Registration />}\n      {step === 'initializer' && <MyMapInitializer />}\n      {step === 'game' && <Game />}\n      {step === 'end' && <End />}\n      <ReactNotifications />\n    </div>\n  )\n}\n\nexport default App\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './App'\nimport StateContextProvider from './context/state.context'\nimport MyMapInitializerContextProvider from './context/myMapInitializer.context'\nimport * as firebase from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\nimport { FirebaseService } from './utils/FirebaseService'\n\nexport const firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyDUrwg_ZtFObXBZEx0Q7nmiXs5tRpsTJBc',\n  authDomain: 'sea-battle-3cb54.firebaseapp.com',\n  projectId: 'sea-battle-3cb54',\n  storageBucket: 'sea-battle-3cb54.appspot.com',\n  messagingSenderId: '391483818458',\n  appId: '1:391483818458:web:c8166093bec5421e0bc0e3',\n})\n\nFirebaseService.setFirestoreDb(getFirestore(firebaseApp))\n\nReactDOM.render(\n  <StrictMode>\n    <StateContextProvider>\n      <MyMapInitializerContextProvider>\n        <App />\n      </MyMapInitializerContextProvider>\n    </StateContextProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}